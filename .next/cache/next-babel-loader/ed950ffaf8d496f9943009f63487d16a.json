{"ast":null,"code":"var _jsxFileName = \"E:\\\\dev\\\\quantit_study\\\\dw-next-github\\\\pages\\\\users\\\\[name].jsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\"; // eslint-disable-next-line import/no-extraneous-dependencies\n\nimport dotenv from \"dotenv\";\nimport Profile from \"../../components/Profile\";\nimport Repositories from \"../../components/Repositories\";\nconst style = new String(\".user-contents-wrapper.jsx-3830800604{padding:20px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkU6XFxkZXZcXHF1YW50aXRfc3R1ZHlcXGR3LW5leHQtZ2l0aHViXFxwYWdlc1xcdXNlcnNcXFtuYW1lXS5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBT2lCLEFBR2tCLGFBQ0EsMEVBQ2YiLCJmaWxlIjoiRTpcXGRldlxccXVhbnRpdF9zdHVkeVxcZHctbmV4dC1naXRodWJcXHBhZ2VzXFx1c2Vyc1xcW25hbWVdLmpzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmZXRjaCBmcm9tIFwiaXNvbW9ycGhpYy11bmZldGNoXCI7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLWV4dHJhbmVvdXMtZGVwZW5kZW5jaWVzXG5pbXBvcnQgY3NzIGZyb20gXCJzdHlsZWQtanN4L2Nzc1wiO1xuaW1wb3J0IGRvdGVudiBmcm9tIFwiZG90ZW52XCI7XG5pbXBvcnQgUHJvZmlsZSBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9Qcm9maWxlXCI7XG5pbXBvcnQgUmVwb3NpdG9yaWVzIGZyb20gXCIuLi8uLi9jb21wb25lbnRzL1JlcG9zaXRvcmllc1wiO1xuXG5jb25zdCBzdHlsZSA9IGNzc2BcbiAgLnVzZXItY29udGVudHMtd3JhcHBlciB7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG5gO1xuXG5jb25zdCBuYW1lID0gKHsgdXNlciwgcmVwb3MgfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwidXNlci1jb250ZW50cy13cmFwcGVyXCI+XG4gICAgICA8UHJvZmlsZSB1c2VyPXt1c2VyfSAvPlxuICAgICAgPFJlcG9zaXRvcmllcyB1c2VyPXt1c2VyfSByZXBvcz17cmVwb3N9IC8+XG4gICAgICA8c3R5bGUganN4PntzdHlsZX08L3N0eWxlPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFNlcnZlclNpZGVQcm9wcyA9IGFzeW5jICh7IHF1ZXJ5IH0pID0+IHtcbiAgY29uc3QgeyBuYW1lLCBwYWdlID0gXCIxXCIgfSA9IHF1ZXJ5O1xuICB0cnkge1xuICAgIGxldCB1c2VyO1xuICAgIGxldCByZXBvcztcbiAgICBjb25zdCB0b2tlbiA9IHByb2Nlc3MuZW52LlRPS0VOO1xuICAgIGNvbnNvbGUubG9nKHRva2VuKTtcblxuICAgIGNvbnN0IHVzZXJSZXMgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS91c2Vycy8ke25hbWV9YCwge1xuICAgICAgaGVhZGVyczoge1xuICAgICAgICBBdXRob3JpemF0aW9uOiBgdG9rZW4gJHt0b2tlbn1gLFxuICAgICAgfSxcbiAgICB9KTtcbiAgICBpZiAodXNlclJlcy5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgdXNlciA9IGF3YWl0IHVzZXJSZXMuanNvbigpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBFcnJvcih1c2VyUmVzLnN0YXR1c1RleHQpO1xuICAgIH1cbiAgICBjb25zdCByZXBvUmVzID0gYXdhaXQgZmV0Y2goXG4gICAgICBgaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS91c2Vycy8ke25hbWV9L3JlcG9zP3NvcnQ9dXBkYXRlZCZwYWdlPSR7cGFnZX0mcGVyX3BhZ2U9MTBgLFxuICAgICAge1xuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgQXV0aG9yaXphdGlvbjogYHRva2VuICR7dG9rZW59YCxcbiAgICAgICAgfSxcbiAgICAgIH1cbiAgICApO1xuICAgIGlmIChyZXBvUmVzLnN0YXR1cyA9PT0gMjAwKSB7XG4gICAgICByZXBvcyA9IGF3YWl0IHJlcG9SZXMuanNvbigpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBFcnJvcih1c2VyUmVzLnN0YXR1c1RleHQpO1xuICAgIH1cbiAgICByZXR1cm4geyBwcm9wczogeyB1c2VyLCByZXBvcyB9IH07XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBjb25zb2xlLmxvZyhlLm1lc3NhZ2UpO1xuICAgIHJldHVybiB7IHByb3BzOiB7fSB9O1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBuYW1lO1xuIl19 */\\n/*@ sourceURL=E:\\\\\\\\dev\\\\\\\\quantit_study\\\\\\\\dw-next-github\\\\\\\\pages\\\\\\\\users\\\\\\\\[name].jsx */\");\nstyle.__hash = \"3830800604\";\n\nconst name = ({\n  user,\n  repos\n}) => {\n  return __jsx(\"div\", {\n    className: `jsx-${style.__hash}` + \" \" + \"user-contents-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(Profile, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), __jsx(Repositories, {\n    user: user,\n    repos: repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), __jsx(_JSXStyle, {\n    id: style.__hash,\n    __self: this\n  }, style));\n};\n\nexport const getServerSideProps = async ({\n  query\n}) => {\n  const {\n    name,\n    page = \"1\"\n  } = query;\n\n  try {\n    let user;\n    let repos;\n    const token = process.env.TOKEN;\n    console.log(token);\n    const userRes = await fetch(`https://api.github.com/users/${name}`, {\n      headers: {\n        Authorization: `token ${token}`\n      }\n    });\n\n    if (userRes.status === 200) {\n      user = await userRes.json();\n    } else {\n      throw Error(userRes.statusText);\n    }\n\n    const repoRes = await fetch(`https://api.github.com/users/${name}/repos?sort=updated&page=${page}&per_page=10`, {\n      headers: {\n        Authorization: `token ${token}`\n      }\n    });\n\n    if (repoRes.status === 200) {\n      repos = await repoRes.json();\n    } else {\n      throw Error(userRes.statusText);\n    }\n\n    return {\n      props: {\n        user,\n        repos\n      }\n    };\n  } catch (e) {\n    console.log(e.message);\n    return {\n      props: {}\n    };\n  }\n};\nexport default name;","map":{"version":3,"sources":["E:/dev/quantit_study/dw-next-github/pages/users/[name].jsx"],"names":["fetch","dotenv","Profile","Repositories","style","name","user","repos","getServerSideProps","query","page","token","process","env","TOKEN","console","log","userRes","headers","Authorization","status","json","Error","statusText","repoRes","props","e","message"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB,C,CACA;;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,MAAMC,KAAK,2tFAAX;;;AAOA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AAChC,SACE;AAAA,6CAAe,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAED,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,YAAD;AAAc,IAAA,IAAI,EAAEA,IAApB;AAA0B,IAAA,KAAK,EAAEC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF;AAAA;AAAA;AAAA,YADF;AAOD,CARD;;AAUA,OAAO,MAAMC,kBAAkB,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AACrD,QAAM;AAAEJ,IAAAA,IAAF;AAAQK,IAAAA,IAAI,GAAG;AAAf,MAAuBD,KAA7B;;AACA,MAAI;AACF,QAAIH,IAAJ;AACA,QAAIC,KAAJ;AACA,UAAMI,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,KAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAEA,UAAMM,OAAO,GAAG,MAAMjB,KAAK,CAAE,gCAA+BK,IAAK,EAAtC,EAAyC;AAClEa,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,SAAQR,KAAM;AADvB;AADyD,KAAzC,CAA3B;;AAKA,QAAIM,OAAO,CAACG,MAAR,KAAmB,GAAvB,EAA4B;AAC1Bd,MAAAA,IAAI,GAAG,MAAMW,OAAO,CAACI,IAAR,EAAb;AACD,KAFD,MAEO;AACL,YAAMC,KAAK,CAACL,OAAO,CAACM,UAAT,CAAX;AACD;;AACD,UAAMC,OAAO,GAAG,MAAMxB,KAAK,CACxB,gCAA+BK,IAAK,4BAA2BK,IAAK,cAD5C,EAEzB;AACEQ,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,SAAQR,KAAM;AADvB;AADX,KAFyB,CAA3B;;AAQA,QAAIa,OAAO,CAACJ,MAAR,KAAmB,GAAvB,EAA4B;AAC1Bb,MAAAA,KAAK,GAAG,MAAMiB,OAAO,CAACH,IAAR,EAAd;AACD,KAFD,MAEO;AACL,YAAMC,KAAK,CAACL,OAAO,CAACM,UAAT,CAAX;AACD;;AACD,WAAO;AAAEE,MAAAA,KAAK,EAAE;AAAEnB,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AAAT,KAAP;AACD,GA9BD,CA8BE,OAAOmB,CAAP,EAAU;AACVX,IAAAA,OAAO,CAACC,GAAR,CAAYU,CAAC,CAACC,OAAd;AACA,WAAO;AAAEF,MAAAA,KAAK,EAAE;AAAT,KAAP;AACD;AACF,CApCM;AAsCP,eAAepB,IAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport css from \"styled-jsx/css\";\nimport dotenv from \"dotenv\";\nimport Profile from \"../../components/Profile\";\nimport Repositories from \"../../components/Repositories\";\n\nconst style = css`\n  .user-contents-wrapper {\n    padding: 20px;\n    display: flex;\n  }\n`;\n\nconst name = ({ user, repos }) => {\n  return (\n    <div className=\"user-contents-wrapper\">\n      <Profile user={user} />\n      <Repositories user={user} repos={repos} />\n      <style jsx>{style}</style>\n    </div>\n  );\n};\n\nexport const getServerSideProps = async ({ query }) => {\n  const { name, page = \"1\" } = query;\n  try {\n    let user;\n    let repos;\n    const token = process.env.TOKEN;\n    console.log(token);\n\n    const userRes = await fetch(`https://api.github.com/users/${name}`, {\n      headers: {\n        Authorization: `token ${token}`,\n      },\n    });\n    if (userRes.status === 200) {\n      user = await userRes.json();\n    } else {\n      throw Error(userRes.statusText);\n    }\n    const repoRes = await fetch(\n      `https://api.github.com/users/${name}/repos?sort=updated&page=${page}&per_page=10`,\n      {\n        headers: {\n          Authorization: `token ${token}`,\n        },\n      }\n    );\n    if (repoRes.status === 200) {\n      repos = await repoRes.json();\n    } else {\n      throw Error(userRes.statusText);\n    }\n    return { props: { user, repos } };\n  } catch (e) {\n    console.log(e.message);\n    return { props: {} };\n  }\n};\n\nexport default name;\n"]},"metadata":{},"sourceType":"module"}